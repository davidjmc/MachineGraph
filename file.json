{"swigCPtr":139814012557216,"swigCMemOwn":true}

		// NodePath paths = machine.afters(root.destination(), root.event());
		// Node n = paths.

		// Node node = machine.rootNode();
		// TransitionList trasitionList = machine.transitions(node);

		// out.println("Root node transition list: " + trasitionList.size());

		// for(int i=0; i<trasitionList.size(); i++){

		// NodePath path = machine.afters(node, trasitionList.get(i).event());
		// Node n = path.get(i);

		// out.println("Current Event: " +
		// session.uncompileEvent(trasitionList.get(i).event()));

		// out.println("Path size : " + path.size());

		// out.println("Destination Node: " +
		// trasitionList.get(i).destination());

		// TransitionList childList = machine.transitions(n);
		
			/*
	 * for(int i=0; i<=event.size();i++) { Node n = null; NodePath paths;
	 * 
	 * if(i == 0) { n = node; paths = new NodePath(machine.afters(n,
	 * event.get(i))); }
	 * 
	 * //long currentEvent = event.get(i); //System.out.println(node);
	 * 
	 * System.out.println("Event: " + session.uncompileEvent(event.get(i)) + "["
	 * + event.get(i) +"]"); paths = new NodePath(machine.afters(n,
	 * event.get(i))); n = paths.get(i); System.out.println("Node: " + n);
	 * 
	 * 
	 * 
	 * //Node nodeB = paths.get(0); //System.out.println(nodeB);
	 * 
	 * //currentEvent = event.get(1);
	 * 
	 * //paths = machine.afters(nodeB, currentEvent);
	 * 
	 * //System.out.println("pathSize = " + paths.size() + " - event = " +
	 * session.uncompileEvent(currentEvent) + "[" + currentEvent+"]");
	 * 
	 * 
	 * //Node nodeC = paths.get(0); //System.out.println(nodeC);
	 * 
	 * //currentEvent = event.get(1);
	 * 
	 * //paths = machine.afters(nodeC, currentEvent);
	 * 
	 * //System.out.println("pathSize = " + paths.size() + " - event = " +
	 * session.uncompileEvent(currentEvent) + "[" + currentEvent+"]");
	 * 
	 * //Node nodeProcess = paths.get(0); //System.out.println(nodeProcess);
	 * 
	 * //currentEvent = event.get(1);
	 * 
	 * //paths = machine.afters(nodeProcess, currentEvent);
	 * //System.out.println(paths.size() + "===");
	 * 
	 * //System.out.println("pathSize = " + paths.size() + " - event = " +
	 * session.uncompileEvent(currentEvent) + "[" + currentEvent+"]");
	 * 
	 * 
	 * NodePath path = machine.afters(node, event.get(i)); for(Node n : path) {
	 * if(n == null) { System.out.println("-, "); } else { if(name == null) {
	 * System.out.println("(unknown), "); } else {
	 * System.out.println(name.toString()+ ", "); } } }
	 * 
	 * }
	 */
		
